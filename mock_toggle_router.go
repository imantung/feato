// Code generated by MockGen. DO NOT EDIT.
// Source: toggle_router.go

// Package feato is a generated GoMock package.
package feato

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockToggleRouter is a mock of ToggleRouter interface
type MockToggleRouter struct {
	ctrl     *gomock.Controller
	recorder *MockToggleRouterMockRecorder
}

// MockToggleRouterMockRecorder is the mock recorder for MockToggleRouter
type MockToggleRouterMockRecorder struct {
	mock *MockToggleRouter
}

// NewMockToggleRouter creates a new mock instance
func NewMockToggleRouter(ctrl *gomock.Controller) *MockToggleRouter {
	mock := &MockToggleRouter{ctrl: ctrl}
	mock.recorder = &MockToggleRouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockToggleRouter) EXPECT() *MockToggleRouterMockRecorder {
	return m.recorder
}

// Route mocks base method
func (m *MockToggleRouter) Route(arg0 *Feature) IndexToggle {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Route", arg0)
	ret0, _ := ret[0].(IndexToggle)
	return ret0
}

// Route indicates an expected call of Route
func (mr *MockToggleRouterMockRecorder) Route(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Route", reflect.TypeOf((*MockToggleRouter)(nil).Route), arg0)
}
